diff -up qttools-everywhere-src-5.15.2/src/windeployqt/main.cpp.o3de qttools-everywhere-src-5.15.2/src/windeployqt/main.cpp
--- qttools-everywhere-src-5.15.2/src/windeployqt/main.cpp.o3de	2021-04-09 17:47:32.228890545 -0400
+++ qttools-everywhere-src-5.15.2/src/windeployqt/main.cpp	2021-04-09 17:52:50.848963503 -0400
@@ -109,7 +109,9 @@ enum QtModule
     QtGamePadModule           = 0x0001000000000000,
     Qt3DAnimationModule       = 0x0002000000000000,
     QtWebViewModule           = 0x0004000000000000,
-    Qt3DExtrasModule          = 0x0008000000000000
+    Qt3DExtrasModule          = 0x0008000000000000,
+    QtDBusModule              = 0x0010000000000000,
+    QtXcbQpaModule            = 0x0020000000000000
 };
 
 struct QtModuleEntry {
@@ -171,7 +173,9 @@ static QtModuleEntry qtModuleEntries[] =
     { QtWebChannelModule, "webchannel", "Qt5WebChannel", nullptr },
     { QtTextToSpeechModule, "texttospeech", "Qt5TextToSpeech", nullptr },
     { QtSerialBusModule, "serialbus", "Qt5SerialBus", nullptr },
-    { QtWebViewModule, "webview", "Qt5WebView", nullptr }
+    { QtWebViewModule, "webview", "Qt5WebView", nullptr },
+    { QtDBusModule, "dbus", "Qt5DBus", "qtbase" },
+    { QtXcbQpaModule, "xcbqpa", "Qt5XcbQpa", "dbus" },
 };
 
 enum QtPlugin {
@@ -706,12 +710,13 @@ static inline QString helpText(const QCo
     return result;
 }
 
-static inline bool isQtModule(const QString &libName)
+static inline bool isQtModule(const QString &libName, Platform platform)
 {
     // Match Standard modules named Qt5XX.dll
-    if (libName.size() < 3 || !libName.startsWith(QLatin1String("Qt"), Qt::CaseInsensitive))
+    const QLatin1String prefix = platform & UnixBased ? QLatin1String("libQt") : QLatin1String("Qt");
+    if (libName.size() < prefix.size() || !libName.startsWith(prefix, Qt::CaseInsensitive))
         return false;
-    const QChar version = libName.at(2);
+    const QChar version = libName.at(prefix.size());
     return version.isDigit() && (version.toLatin1() - '0') == QT_VERSION_MAJOR;
 }
 
@@ -734,7 +739,7 @@ static bool findDependentQtLibraries(con
     // are run the 2nd time (updating). We want to check against the Qt bin dir libraries
     const int start = result->size();
     for (const QString &lib : qAsConst(dependentLibs)) {
-        if (isQtModule(lib)) {
+        if (isQtModule(lib, platform)) {
             const QString path = normalizeFileName(qtBinDir + QLatin1Char('/') + QFileInfo(lib).fileName());
             if (!result->contains(path))
                 result->append(path);
@@ -1207,8 +1212,10 @@ static inline int qtVersion(const QMap<Q
 // Determine the Qt lib infix from the library path of "Qt5Core<qtblibinfix>[d].dll".
 static inline QString qtlibInfixFromCoreLibName(const QString &path, bool isDebug, Platform platform)
 {
-    const int startPos = path.lastIndexOf(QLatin1Char('/')) + 8;
-    int endPos = path.lastIndexOf(QLatin1Char('.'));
+    int startPos = path.lastIndexOf(QLatin1Char('/')) + 8;
+    if (platform & UnixBased)
+        startPos += 3; // leading "lib"
+    int endPos = path.indexOf(QLatin1Char('.'));
     if (isDebug && (platform & WindowsBased))
         endPos--;
     return endPos > startPos ? path.mid(startPos, endPos - startPos) : QString();
@@ -1419,6 +1426,11 @@ static DeployResult deploy(const Options
         if (result.deployedQtLibraries & qtModule.module) {
             const QString library = libraryPath(libraryLocation, qtModule.libraryName, qtLibInfix, options.platform, result.isDebug);
             deployedQtLibraries.append(library);
+            if (options.platform & UnixBased) {
+                // Copy the versioned symlinks as well
+                deployedQtLibraries.append(QStringLiteral("%1.%2").arg(library).arg(QT_VERSION_MAJOR));
+                deployedQtLibraries.append(QStringLiteral("%1.%2.%3").arg(library).arg(QT_VERSION_MAJOR).arg(QT_VERSION_MINOR));
+            }
             if (qtModule.module == QtGuiModule)
                 qtGuiLibrary = library;
         }
@@ -1639,7 +1651,7 @@ static bool deployWebEngineCore(const QM
                                              "qtwebengine_resources_100p.pak",
                                              "qtwebengine_resources_200p.pak"};
     QByteArray webEngineProcessName(webEngineProcessC);
-    if (isDebug && platformHasDebugSuffix(options.platform))
+    if (isDebug && (options.platform & WindowsBased) && platformHasDebugSuffix(options.platform))
         webEngineProcessName.append('d');
     if (optVerboseLevel)
         std::wcout << "Deploying: " << webEngineProcessName.constData() << "...\n";
